#!/bin/bash

set -e

#
## Use for demo purposes only!
## To execute just run the following commaind inside a demo repository:
#
# wget https://raw.githubusercontent.com/bobbyiliev/github-activity-bash-script/main/activity.sh
# bash activity.sh
#
## Finllly push your changes to GitHub:
#
# git push origin -f your_branch_name"
#

if [[ ! -d ".git" ]] ; then
  cwd=$(pwd)
  dir=$(mktemp -d -p $cwd test-git-repo-XXXXXXXXX)
  mkdir -p $dir
  cd $dir
  git init
  >&2 echo NO. NOT git repo...
  exit 1
fi

# thomas-nyman CC BY-SA 3.0 https://unix.stackexchange.com/a/155077
if [[ -z "$(git status --porcelain)" ]] ; then
  echo OK. Working directory clean...
else
  >&2 echo NO. Working directory NOT clean. Uncommitted changes...
  exit 2
fi

if [[ -z "ACTIVITY_BR" ]] ; then
  ACTIVITY_BR="main"
fi
git checkout --orphan $ACTIVITY_BR >/dev/null 2>&1 || git checkout $ACTIVITY_BR > /dev/null 2>&1

# Create temp commits direcotry
if [[ ! -d .commits ]] ; then
  mkdir -p .commits
fi

# Add changes file log
if [[ ! -f  .commits/changes ]] ; then
  touch .commits/changes
fi

if [[ -z "$MAX_PAST_DAYS" ]] ; then
  MAX_PAST_DAYS=365
fi

# Create commits for the past 365 days
for (( day=$MAX_PAST_DAYS; day>=1; day-- )) ; do
    # Get the past date of the commit
    day2=$(date --date="-${day} day" "+%a, %d %b %Y %X %z")

    echo "Creating commits for ${day}"

    # Generate random number of commits for that date
    if [[ -z "$COMMIT_NB" ]] ; then
      if [[ -z "$COMMIT_MAX" ]] ; then
        commits=$(( ( RANDOM % 6 ) + 2 ))
      else
        commits=$(( ( RANDOM % $COMMIT_MAX ) + 1 ))
      fi
    else
      commits=$COMMIT_NB
    fi

    # Create the comits
    echo "Creating ${commits} commits"
    for ((i=1;i<=${commits};i++)); do
        content=$(date -d "${day2}" +"%s")
        echo ${content}-${i} >> .commits/changes
        git add .commits/changes
        git commit -m "Commit number ${content}-${i}"
        git commit --amend --no-edit --date "${day2}"
    done
done

function yes_or_no {
# author   : tiago-lopo john-kugelman CC BY-SA 3.0 https://stackoverflow.com/a/29436423
# usage    : yes_or_no "$message" && do_something
# modified
    while true; do
        read -p "$* [y/n]: " yn
        case $yn in
            [YyOo]*) return 0  ;;
            [Nn]*) echo "Aborted" ; return  1 ;;
        esac
    done
}

if command -v gh ; then
  echo
  echo OK. github cli found.
  yes_or_no "Did you want to create repo on github ? " && \
            gh repo create $(basename $(pwd)) \
              -y \
              --private \
              --description 'generated by https://github.com/ccdd12/github-activity-bash-script' \
              --homepage    'https://github.com/ccdd12/github-activity-bash-script' \
            >/dev/null 2>&1 || \
            echo NO. repo already exist.
fi

echo
yes_or_no "Did you want to push to remote 'origin' ? " && \
          git push --force --set-upstream origin $ACTIVITY_BR || \
          echo OK. push to your own remote remote/branch.

cat << EOF



      Generating commits completed...

      To push your changes later :

          git remote add                    origin https://github.com/username/$(basename $(pwd))

          gh  repo   create
          git push   --force --set-upstream origin $ACTIVITY_BR


EOF
